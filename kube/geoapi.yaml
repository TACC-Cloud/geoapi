



---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.16.0 (0c01309)
  labels:
    app: geoapi-rabbitmq
  name: geoapi-rabbitmq
spec:
  replicas: 1
  strategy: {}
  selector:
    matchLabels:
      app: geoapi-rabbitmq
  template:
    metadata:
      labels:
        app: geoapi-rabbitmq
    spec:
      containers:
      - env:
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq
              key: password
        envFrom:
          - configMapRef:
              name: geoapi-environment-vars
        image: rabbitmq
        ports:
          - containerPort: 5672
        name: geoapi-rabbitmq
        resources:
          requests:
            memory: '1G'
          limits:
            memory: '2G'
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.16.0 (0c01309)
  labels:
    app: geoapi-nginx
  name: geoapi-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: geoapi-nginx
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: geoapi-nginx
    spec:
      containers:
      - image: nginx
        name: geoapi-nginx
        resources:
          requests:
            memory: '512M'
          limits:
            memory: '2G'
        ports:
          - containerPort: 80
        volumeMounts:
          - mountPath: /assets
            name: assets
          - mountPath: /etc/nginx/conf.d
            name: config-volume
      restartPolicy: Always
      volumes:
        - name: config-volume
          configMap:
            name: geoapi-nginx-conf
        - name: assets
          nfs:
            server: ${NSFSHARE_CLUSTER_IP}
            path: / 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.16.0 (0c01309)
  labels:
    app: geoapi-workers
  name: geoapi-workers
spec:
  replicas: 2
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: geoapi-workers
  template:
    metadata:
      labels:
        app: geoapi-workers
    spec:
      containers:
      - args:
        - celery
        - -A
        - geoapi.celery_app
        - worker
        - -n
        - worker@%h
        - -l
        - INFO
        envFrom:
          - configMapRef:
              name: geoapi-environment-vars
        env:
          - name: RABBITMQ_PASSWD
            valueFrom:
              secretKeyRef:
                name: rabbitmq
                key: password
          - name: DB_PASSWD
            valueFrom:
              secretKeyRef:
                name: postgres
                key: password
          - name: TENANT
            valueFrom:
              secretKeyRef:
                name: tapis
                key: tenant
        image: taccaci/geoapi-workers:${GEOAPI_TAG}
        name: geoapi-workers
        resources:
          requests:
            memory: '3G'
          limits:
            memory: '8G'
        volumeMounts:
        - mountPath: /assets
          name: assets
      hostname: geoapi-workers
      restartPolicy: Always
      volumes:
      - name: assets
        nfs:
          server: ${NSFSHARE_CLUSTER_IP}
          path: /
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.16.0 (0c01309)
  labels:
    app: geoapi-celerybeat
  name: geoapi-celerybeat
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: geoapi-celerybeat
  template:
    metadata:
      labels:
        app: geoapi-celerybeat
    spec:
      containers:
      - args:
        - celery
        - -A
        - geoapi.celery_app
        - beat
        - -l
        - INFO
        envFrom:
          - configMapRef:
              name: geoapi-environment-vars
        env:
          - name: RABBITMQ_PASSWD
            valueFrom:
              secretKeyRef:
                name: rabbitmq
                key: password
          - name: DB_PASSWD
            valueFrom:
              secretKeyRef:
                name: postgres
                key: password
          - name: TENANT
            valueFrom:
              secretKeyRef:
                name: tapis
                key: tenant

        image: taccaci/geoapi-workers:${GEOAPI_TAG}
        name: geoapi-celerybeat
        resources:
          requests:
            memory: '512M'
          limits:
            memory: '1G'
      hostname: geoapi-celerybeat
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.16.0 (0c01309)
  labels:
    app: geoapi
  name: geoapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: geoapi
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: geoapi
    spec:
      containers:
      - args:
        - gunicorn
        - -w
        - "4"
        - -b
        - 0.0.0.0:5000
        - -k
        - gevent
        - --timeout
        - "1800"
        - app:app
        envFrom:
          - configMapRef:
              name: geoapi-environment-vars
        env:
          - name: RABBITMQ_PASSWD
            valueFrom:
              secretKeyRef:
                name: rabbitmq
                key: password
          - name: DB_PASSWD
            valueFrom:
              secretKeyRef:
                name: postgres
                key: password
          - name: TENANT
            valueFrom:
              secretKeyRef:
                name: tapis
                key: tenant
        image: taccaci/geoapi:${GEOAPI_TAG}
        name: geoapi
        ports:
        - containerPort: 5000
        resources:
          requests:
            memory: '2G'
          limits:
            memory: '4G'
        stdin: true
        tty: true
        volumeMounts:
        - mountPath: /assets
          name: assets
      hostname: geoapi
      restartPolicy: Always
      volumes:
        - name: assets
          nfs:
            server: ${NSFSHARE_CLUSTER_IP}
            path: /
---
apiVersion: batch/v1
kind: Job
metadata:
  name: geoapi-migrations
spec:
  parallelism: 1
  backoffLimit: 5
  activeDeadlineSeconds: 100
  template:
    spec:
      containers:
      - name: geoapi
        envFrom:
          - configMapRef:
              name: geoapi-environment-vars
        env:
          - name: RABBITMQ_PASSWD
            valueFrom:
              secretKeyRef:
                name: rabbitmq
                key: password
          - name: DB_PASSWD
            valueFrom:
              secretKeyRef:
                name: postgres
                key: password
        image: taccaci/geoapi:${GEOAPI_TAG}
        command: ["alembic", "upgrade", "head"]
      restartPolicy: Never
