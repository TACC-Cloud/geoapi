name: geoapi

volumes:
  assets:
  pgdata:

networks:
  geoapi:

services:
  redis:
    image: redis:7-bookworm
    command: redis-server --loglevel warning
    networks:
      - geoapi
    container_name: geoapi_redis
    healthcheck:
      test: redis-cli ping
      interval: 5s
      timeout: 30s
      retries: 5

  rabbitmq:
    image: rabbitmq:4-management
    ports:
      - 15672:15672
    networks:
      - geoapi
    environment:
      - RABBITMQ_DEFAULT_USER=dev
      - RABBITMQ_DEFAULT_PASS=dev
      - RABBITMQ_DEFAULT_VHOST=dev
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 30s
      retries: 5

  postgres:
    image: postgis/postgis:11-3.3-alpine
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - geoapi
    container_name: geoapi_postgres
    hostname: geoapi_postgres
    environment:
      - POSTGRES_PASSWORD=dev
      - POSTGRES_USER=dev
      - POSTGRES_DB=dev

  nginx:
    image: nginx:stable
    ports:
      - 8888:80
    volumes:
      - assets:/assets
      - ./local_conf/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - geoapi
    depends_on:
      - backend

  workers:
    image: taccaci/geoapi-workers:local
    networks:
      - geoapi
    volumes:
      - ../:/app
      - assets:/assets
    environment:
      - MAPILLARY_CLIENT_TOKEN
      - FLASK_APP=/app/geoapi/app.py
      - APP_ENV=local
      - ASSETS_BASE_DIR=/assets
      - DESIGNSAFE_URL=${DESIGNSAFE_URL}

    stdin_open: true
    tty: true
    container_name: geoapiworkers
    hostname: geoapiworkers
    command: >
      sh -c '
      celery -A geoapi.celery_app worker -l info -Q default -n default_worker@geoapi --uid=nobody --gid=nogroup &
      celery -A geoapi.celery_app worker -l info -Q heavy --concurrency=6 -n heavy_worker@geoapi --uid=nobody --gid=nogroup &
      wait
      '
    depends_on:
      rabbitmq:
        condition: service_healthy

  celerybeat:
    image: taccaci/geoapi-workers:local
    networks:
      - geoapi
    volumes:
      - ../:/app
      - assets:/assets
    environment:
      - MAPILLARY_CLIENT_TOKEN=4866220476802272
      - FLASK_APP=/app/geoapi/app.py
      - APP_ENV=local
      - ASSETS_BASE_DIR=/assets
    container_name: geoapicelerybeat
    hostname: geoapicelerybeat
    command: "celery -A geoapi.celery_app beat -l info --uid=nobody --gid=nogroup"
    depends_on:
      rabbitmq:
        condition: service_healthy

  backend:
    image: taccaci/geoapi:local
    networks:
      - geoapi
    volumes:
      - ../:/app
      - assets:/assets
    ports:
      - 8000-8003:8000
    environment:
      - MAPILLARY_CLIENT_TOKEN
      - FLASK_APP=/app/geoapi/app.py
      - APP_ENV=local
      - ASSETS_BASE_DIR=/assets
      - DESIGNSAFE_URL
      - FLASK_SESSION_SECRET_KEY
      - TAPIS_CLIENT_ID
      - TAPIS_CLIENT_KEY
    stdin_open: true
    tty: true
    scale: 4
    hostname: geoapi
    command: "gunicorn -w 1 -b 0.0.0.0:8000 geoapi.app:app -k geventwebsocket.gunicorn.workers.GeventWebSocketWorker --reload --timeout 300"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      redis:
        condition: service_healthy
