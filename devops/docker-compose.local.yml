---
volumes:
  assets:
  pgdata:

networks:
  geoapi:

x-worker-base: &worker-base  # Base fragment for worker services
  # See: https://docs.docker.com/reference/compose-file/fragments/
  image: taccwma/geoapi-workers:local
  networks:
    - geoapi
  volumes:
    - ../:/app
    - assets:/assets
  environment:
    - MAPILLARY_CLIENT_ID
    - MAPILLARY_CLIENT_SECRET
    - MAPILLARY_CLIENT_TOKEN
    - FLASK_APP=/app/geoapi/app.py
    - APP_ENV=local
    - ASSETS_BASE_DIR=/assets
    - DESIGNSAFE_URL=${DESIGNSAFE_URL}
  stdin_open: true
  tty: true
  depends_on:
    rabbitmq:
      condition: service_healthy

services:

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 15672:15672
    networks:
      - geoapi
    environment:
      - RABBITMQ_DEFAULT_USER=dev
      - RABBITMQ_DEFAULT_PASS=dev
      - RABBITMQ_DEFAULT_VHOST=dev
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 30s
      retries: 5

  postgres:
    image: postgis/postgis:11-3.3-alpine
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - geoapi
    container_name: geoapi_postgres
    hostname: geoapi_postgres
    environment:
      - POSTGRES_PASSWORD=dev
      - POSTGRES_USER=dev
      - POSTGRES_DB=dev

  nginx:
    image: nginx
    ports:
      - 8888:80
    volumes:
      - assets:/assets
      - ./local_conf/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - geoapi

  workers:
    <<: *worker-base  # Reuses worker-base fragment defined at start
    container_name: geoapiworkers
    hostname: geoapiworkers
    command: celery -A geoapi.celery_app worker -l info -Q default -n default_worker@geoapi

  workers-heavy:
    <<: *worker-base  # Reuses worker-base fragment defined at start
    container_name: geoapiworkers-heavy
    hostname: geoapiworkers-heavy
    command: celery -A geoapi.celery_app worker -l info -Q heavy --concurrency=6

  celerybeat:
    image: taccwma/geoapi-workers:local
    networks:
      - geoapi
    volumes:
      - ../:/app
      - assets:/assets
    environment:
      - FLASK_APP=/app/geoapi/app.py
      - APP_ENV=local
      - ASSETS_BASE_DIR=/assets
    stdin_open: true
    tty: true
    container_name: geoapicelerybeat
    hostname: geoapicelerybeat
    command: "celery -A geoapi.celery_app beat -l info"
    depends_on:
      rabbitmq:
        condition: service_healthy

  api:
    image: taccwma/geoapi:local
    networks:
      - geoapi
    volumes:
      - ../:/app
      - assets:/assets
    ports:
      - 8000:8000
    dns:
      - 8.8.8.8
      - 8.8.4.4
    environment:
      - FLASK_APP=/app/geoapi/app.py
      - APP_ENV=local
      - ASSETS_BASE_DIR=/assets
      - DESIGNSAFE_URL
      - FLASK_SESSION_SECRET_KEY
      - TAPIS_CLIENT_ID
      - TAPIS_CLIENT_KEY
      - MAPILLARY_CLIENT_ID
      - MAPILLARY_CLIENT_SECRET
      - MAPILLARY_CLIENT_TOKEN
    stdin_open: true
    tty: true
    container_name: geoapi
    hostname: geoapi
    command: "gunicorn -w 4 -b 0.0.0.0:8000 geoapi.app:app -k gevent --reload --timeout 300"
    extra_hosts:
      - "host.docker.internal:host-gateway"
