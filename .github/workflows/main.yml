name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: ["**"]
jobs:
  Linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Fetch base and install Poetry
        run: |
          git fetch origin ${{github.base_ref}}
          pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "poetry"

      - name: Install Python Packages
        run: |
          cd devops
          poetry install --only dev

      - name: Run flake8
        run: |
          cd devops
          poetry run flake8 ../geoapi

      - name: Formatting with black
        run: |
          cd devops
          poetry run black --check ../geoapi

  Geoapi_Unit_Tests:
    runs-on: ubuntu-latest
    env:
      APP_ENV: testing
      DB_HOST: localhost
    services:
      postgres:
        image: mdillon/postgis:11-alpine
        env:
          POSTGRES_USER: dev
          POSTGRES_PASSWORD: dev
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4

      - name: Fetch base and install Poetry
        run: |
          git fetch origin ${{github.base_ref}}
          pipx install poetry

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "poetry"

      - name: Install ffmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Install Python Packages
        run: |
          cd devops
          poetry install --with dev,flask,worker

      - name: Run server-side unit tests
        run: |
          cd devops
          poetry run pytest ../geoapi

  Workers_Unit_Tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis:11-3.0-alpine
        env:
          POSTGRES_USER: dev
          POSTGRES_PASSWORD: dev
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v1
        with:
          password: ${{ secrets.DOCKER_PASSWORD }}
          username: ${{ secrets.DOCKER_USER  }}
      - name: Build worker image
        run: |
          docker pull taccaci/geoapi-workers:latest
          docker build --cache-from taccaci/geoapi-workers:latest -t taccaci/geoapi-workers:latest -f devops/Dockerfile.worker --target development .
      - name: Run worker test
        run: |
          docker run --network="host" -e APP_ENV='testing' -e DB_HOST='localhost'  taccaci/geoapi-workers:latest pytest -m "worker"
