name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ '**' ]
jobs:
  Geoapi_Unit_Tests:
    runs-on: ubuntu-18.04
    env:
      APP_ENV: testing
      DB_HOST: localhost
    services:
      postgres:
        image: mdillon/postgis:11-alpine
        env:
          POSTGRES_USER: dev
          POSTGRES_PASSWORD: dev
          POSTGRES_DB: test
        ports:
          -  5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install ffmpeg
      run: sudo apt-get install -y ffmpeg
    - name: Install dependecies
      run: | 
        python -m pip install --upgrade pip
        pip install -q -r requirements.txt
    - name: Run server-side unit tests
      run: pytest
  Workers_Unit_Tests:
    runs-on: ubuntu-18.04
    services:
      postgres:
        image: mdillon/postgis:11-alpine
        env:
          POSTGRES_USER: dev
          POSTGRES_PASSWORD: dev
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v1
    - uses: docker/login-action@v1
      with:
        password: ${{ secrets.DOCKER_PASSWORD }}
        username: ${{ secrets.DOCKER_USER  }}
    - name: Build worker image
      run: |
        docker pull taccaci/geoapi-workers:latest
        docker build --cache-from taccaci/geoapi-workers:latest -t taccaci/geoapi-workers:latest -f Dockerfile.potree .
    - name: Run worker test
      run: |
        docker network create -d bridge test
        docker run --net=test -p 5432:5432 -e APP_ENV='testing' -e DB_HOST='localhost'  taccaci/geoapi-workers:latest pytest -m "worker"
