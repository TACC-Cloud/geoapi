"""empty message

Revision ID: de5ac2f0a96f
Revises: 77346f8d9025
Create Date: 2022-02-07 09:07:13.519483

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'de5ac2f0a96f'
down_revision = '77346f8d9025'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('tenant_id', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('status', sa.String(length=256), nullable=True),
    sa.Column('message', sa.String(length=512), nullable=True),
    sa.Column('viewed', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_username'), 'notifications', ['username'], unique=False)
    op.create_table('progress_notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('tenant_id', sa.String(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=256), nullable=True),
    sa.Column('message', sa.String(length=512), nullable=True),
    sa.Column('logs', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('viewed', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_progress_notifications_username'), 'progress_notifications', ['username'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('tenant_id', sa.String(), nullable=False),
    sa.Column('system_id', sa.String(), nullable=True),
    sa.Column('system_path', sa.String(), nullable=True),
    sa.Column('system_file', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('public', sa.Boolean(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('process_id', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('tenant_id', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('jwt', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('features',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('the_geom', geoalchemy2.types.Geometry(srid=4326), nullable=False),
    sa.Column('properties', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('styles', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_features_project_id'), 'features', ['project_id'], unique=False)
    op.create_index('ix_features_properties', 'features', ['properties'], unique=False, postgresql_using='gin')
    op.create_table('imported_file',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('system_id', sa.String(), nullable=False),
    sa.Column('path', sa.String(), nullable=False),
    sa.Column('last_updated', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_imported_file_path'), 'imported_file', ['path'], unique=False)
    op.create_index(op.f('ix_imported_file_project_id'), 'imported_file', ['project_id'], unique=False)
    op.create_index(op.f('ix_imported_file_system_id'), 'imported_file', ['system_id'], unique=False)
    op.create_table('observable_data_projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('created_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('system_id', sa.String(), nullable=False),
    sa.Column('path', sa.String(), nullable=False),
    sa.Column('watch_content', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('system_id', 'path')
    )
    op.create_index(op.f('ix_observable_data_projects_project_id'), 'observable_data_projects', ['project_id'], unique=False)
    op.create_table('overlays',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('path', sa.String(), nullable=False),
    sa.Column('minLat', sa.Numeric(), nullable=False),
    sa.Column('minLon', sa.Numeric(), nullable=False),
    sa.Column('maxLat', sa.Numeric(), nullable=False),
    sa.Column('maxLon', sa.Numeric(), nullable=False),
    sa.Column('label', sa.String(), nullable=False),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_overlays_project_id'), 'overlays', ['project_id'], unique=False)
    op.create_table('projects_users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'project_id')
    )
    op.create_table('streetview',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('token', sa.String(), nullable=True),
    sa.Column('service', sa.String(), nullable=True),
    sa.Column('service_user', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('service')
    )
    op.create_index(op.f('ix_streetview_user_id'), 'streetview', ['user_id'], unique=False)
    op.create_table('tile_servers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('attribution', sa.String(), nullable=False),
    sa.Column('tileOptions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('uiOptions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tile_servers_project_id'), 'tile_servers', ['project_id'], unique=False)
    op.create_table('feature_assets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('feature_id', sa.Integer(), nullable=True),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('path', sa.String(), nullable=False),
    sa.Column('original_name', sa.String(), nullable=True),
    sa.Column('original_path', sa.String(), nullable=True),
    sa.Column('display_path', sa.String(), nullable=True),
    sa.Column('asset_type', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['feature_id'], ['features.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_feature_assets_feature_id'), 'feature_assets', ['feature_id'], unique=False)
    op.create_index(op.f('ix_feature_assets_original_path'), 'feature_assets', ['original_path'], unique=False)
    op.create_table('point_clouds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('feature_id', sa.Integer(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('conversion_parameters', sa.String(), nullable=True),
    sa.Column('files_info', sa.JSON(), nullable=True),
    sa.Column('path', sa.String(), nullable=False),
    sa.Column('tenant_id', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['feature_id'], ['features.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_point_clouds_feature_id'), 'point_clouds', ['feature_id'], unique=False)
    op.create_index(op.f('ix_point_clouds_project_id'), 'point_clouds', ['project_id'], unique=False)
    op.create_index(op.f('ix_point_clouds_task_id'), 'point_clouds', ['task_id'], unique=False)
    op.create_table('streetview_instance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('streetview_id', sa.Integer(), nullable=True),
    sa.Column('system_id', sa.String(), nullable=True),
    sa.Column('path', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['streetview_id'], ['streetview.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_streetview_instance_path'), 'streetview_instance', ['path'], unique=False)
    op.create_index(op.f('ix_streetview_instance_streetview_id'), 'streetview_instance', ['streetview_id'], unique=False)
    op.create_index(op.f('ix_streetview_instance_system_id'), 'streetview_instance', ['system_id'], unique=False)
    op.create_table('streetview_organization',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('streetview_id', sa.Integer(), nullable=True),
    sa.Column('key', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('slug', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['streetview_id'], ['streetview.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_streetview_organization_streetview_id'), 'streetview_organization', ['streetview_id'], unique=False)
    op.create_table('streetview_sequence',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('streetview_instance_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('bbox', sa.String(), nullable=True),
    sa.Column('sequence_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['streetview_instance_id'], ['streetview_instance.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_streetview_sequence_bbox'), 'streetview_sequence', ['bbox'], unique=False)
    op.create_index(op.f('ix_streetview_sequence_sequence_id'), 'streetview_sequence', ['sequence_id'], unique=False)
    op.create_index(op.f('ix_streetview_sequence_streetview_instance_id'), 'streetview_sequence', ['streetview_instance_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_streetview_sequence_streetview_instance_id'), table_name='streetview_sequence')
    op.drop_index(op.f('ix_streetview_sequence_sequence_id'), table_name='streetview_sequence')
    op.drop_index(op.f('ix_streetview_sequence_bbox'), table_name='streetview_sequence')
    op.drop_table('streetview_sequence')
    op.drop_index(op.f('ix_streetview_organization_streetview_id'), table_name='streetview_organization')
    op.drop_table('streetview_organization')
    op.drop_index(op.f('ix_streetview_instance_system_id'), table_name='streetview_instance')
    op.drop_index(op.f('ix_streetview_instance_streetview_id'), table_name='streetview_instance')
    op.drop_index(op.f('ix_streetview_instance_path'), table_name='streetview_instance')
    op.drop_table('streetview_instance')
    op.drop_index(op.f('ix_point_clouds_task_id'), table_name='point_clouds')
    op.drop_index(op.f('ix_point_clouds_project_id'), table_name='point_clouds')
    op.drop_index(op.f('ix_point_clouds_feature_id'), table_name='point_clouds')
    op.drop_table('point_clouds')
    op.drop_index(op.f('ix_feature_assets_original_path'), table_name='feature_assets')
    op.drop_index(op.f('ix_feature_assets_feature_id'), table_name='feature_assets')
    op.drop_table('feature_assets')
    op.drop_index(op.f('ix_tile_servers_project_id'), table_name='tile_servers')
    op.drop_table('tile_servers')
    op.drop_index(op.f('ix_streetview_user_id'), table_name='streetview')
    op.drop_table('streetview')
    op.drop_table('projects_users')
    op.drop_index(op.f('ix_overlays_project_id'), table_name='overlays')
    op.drop_table('overlays')
    op.drop_index(op.f('ix_observable_data_projects_project_id'), table_name='observable_data_projects')
    op.drop_table('observable_data_projects')
    op.drop_index(op.f('ix_imported_file_system_id'), table_name='imported_file')
    op.drop_index(op.f('ix_imported_file_project_id'), table_name='imported_file')
    op.drop_index(op.f('ix_imported_file_path'), table_name='imported_file')
    op.drop_table('imported_file')
    op.drop_index('ix_features_properties', table_name='features')
    op.drop_index(op.f('ix_features_project_id'), table_name='features')
    op.drop_table('features')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    op.drop_table('tasks')
    op.drop_table('projects')
    op.drop_index(op.f('ix_progress_notifications_username'), table_name='progress_notifications')
    op.drop_table('progress_notifications')
    op.drop_index(op.f('ix_notifications_username'), table_name='notifications')
    op.drop_table('notifications')
    # ### end Alembic commands ###
