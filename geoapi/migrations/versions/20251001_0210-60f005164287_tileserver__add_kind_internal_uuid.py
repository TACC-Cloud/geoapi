"""tileserver__add_kind_internal_uuid

Revision ID: 60f005164287
Revises: a1b2c3d4e5f6
Create Date: 2025-10-01 02:10:06.393098

Notes:
- The drop/create on `auth.user_id` is only renaming the unique constraint to
  match our naming_convention (e.g. `uq_auth_user_id`). No functional change.
"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "60f005164287"
down_revision = "a1b2c3d4e5f6"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Rename UC to match naming_convention; behavior unchanged. This was autogenerated
    op.drop_constraint(op.f("auth_user_id_key"), "auth", type_="unique")
    op.create_unique_constraint(op.f("uq_auth_user_id"), "auth", ["user_id"])

    # Add TileServer fields
    op.add_column(
        "tile_servers",
        sa.Column(
            "kind",
            sa.String(),
            nullable=True,
            comment="Source kind for what the data is (e.g. cog)",
        ),
    )
    op.add_column(
        "tile_servers",
        sa.Column(
            "internal",
            sa.Boolean(),
            server_default="false",
            nullable=False,
            comment="True when served internally by our stack (e.g., TiTiler). When true, 'uuid' must be non-null. External layers keep this false.",
        ),
    )
    op.add_column(
        "tile_servers",
        sa.Column(
            "uuid",
            sa.UUID(),
            nullable=True,
            comment="Identifier for internally managed assets (e.g., the generated COG file).  Required when 'internal' is true; null for external layers.",
        ),
    )
    op.create_index(
        op.f("ix_tile_servers_uuid"), "tile_servers", ["uuid"], unique=False
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_tile_servers_uuid"), table_name="tile_servers")
    op.drop_column("tile_servers", "uuid")
    op.drop_column("tile_servers", "internal")
    op.drop_column("tile_servers", "kind")
    op.drop_constraint(op.f("uq_auth_user_id"), "auth", type_="unique")
    op.create_unique_constraint(
        op.f("auth_user_id_key"),
        "auth",
        ["user_id"],
        postgresql_nulls_not_distinct=False,
    )
    # ### end Alembic commands ###
